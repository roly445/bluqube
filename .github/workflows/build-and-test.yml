name: Build and Test

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release -p:ContinuousIntegrationBuild=true -p:TreatWarningsAsErrors=true --no-restore

      - name: Run tests with coverage
        run: dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAssembly="BluQube.SourceGeneration"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: '**/coverage.cobertura.xml'
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Pack
        run: dotnet pack --configuration Release -p:ContinuousIntegrationBuild=true -p:SymbolPackageFormat=snupkg --output ./artifacts
        
      - name: Push to MyGet
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --source https://www.myget.org/F/bluqube/api/v3/index.json \
            --api-key ${{ secrets.MYGET_API_KEY }}
          
      - name: Push to NuGet.org
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }}
